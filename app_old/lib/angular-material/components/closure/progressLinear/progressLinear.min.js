/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.5.1-master-4f755ea
 */
goog.provide('ng.material.components.progressLinear');
goog.require('ng.material.core');
(function(){function c(h,a,c){function e(m,d,f){c(d);var e=d[0].querySelector(".md-bar1").style,k=d[0].querySelector(".md-bar2").style,l=angular.element(d[0].querySelector(".md-container"));f.$observe("value",function(b){"query"!=f.mdMode&&(b=100<b?100:0>b?0:Math.ceil(b||0),d.attr("aria-valuenow",b),k[a.CSS.TRANSFORM]=g[b])});f.$observe("mdBufferValue",function(b){e[a.CSS.TRANSFORM]=g[100<b?100:0>b?0:Math.ceil(b||0)]});h(function(){l.addClass("md-ready")})}return{restrict:"E",template:'<div class="md-container"><div class="md-dashed"></div><div class="md-bar md-bar1"></div><div class="md-bar md-bar2"></div></div>',
compile:function(a,d,c){a.attr("aria-valuemin",0);a.attr("aria-valuemax",100);a.attr("role","progressbar");return e}}}angular.module("material.components.progressLinear",["material.core"]).directive("mdProgressLinear",c);c.$inject=["$$rAF","$mdConstant","$mdTheming"];var g=function(){for(var c=Array(101),a=0;101>a;a++)c[a]="translateX("+((a-100)/2).toString()+"%) scale("+(a/100).toString()+", 1)";return c}()})();
