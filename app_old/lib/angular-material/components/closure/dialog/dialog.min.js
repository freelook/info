/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.5.1-master-4f755ea
 */
goog.provide('ng.material.components.dialog');
goog.require('ng.material.components.backdrop');
goog.require('ng.material.core');
(function(){function m(f,g){return{restrict:"E",link:function(h,e,d){g(e);f(function(){var d=e[0].querySelector("md-content");d&&d.scrollHeight>d.clientHeight&&e.addClass("md-content-overflow")})}}}function l(f){function g(d){return{template:'<md-dialog aria-label="{{dialog.label}}"><md-content><h2>{{ dialog.title }}</h2><p>{{ dialog.content }}</p></md-content><div class="md-actions"><md-button ng-if="dialog.$type == \'confirm\'" ng-click="dialog.abort()">{{ dialog.cancel }}</md-button><md-button ng-click="dialog.hide()" class="md-primary">{{ dialog.ok }}</md-button></div></md-dialog>',
controller:function(){this.hide=function(){d.hide(!0)};this.abort=function(){d.cancel()}},controllerAs:"dialog",bindToController:!0}}function h(d,e,g,f,h,m,k,l,n,r,p){function s(c){c.attr({role:"dialog"});var b=c.find("md-content");0===b.length&&(b=c);h.expectAsync(c,"aria-label",function(){var a=b.text().split(/\s+/);3<a.length&&(a=a.slice(0,3).concat("..."));return a.join(" ")})}function t(c,b,a){function d(a){a.target===c[0]&&(c.off(k.CSS.TRANSITIONEND,d),q.resolve())}var q=r.defer();b.append(c);
a?(b=a[0].getBoundingClientRect(),b="translate3d("+(b.left-c[0].offsetWidth)+"px,"+(b.top-c[0].offsetHeight)+"px,0) scale(0.2)"):b="translate3d(0,100%,0) scale(0.5)";c.css(k.CSS.TRANSFORM,b).css("opacity",0);n(function(){n(function(){c.addClass("md-active").css(k.CSS.TRANSFORM,"").css("opacity","").on(k.CSS.TRANSITIONEND,d)})});return q.promise}return{hasBackdrop:!0,isolateScope:!0,onShow:function(c,b,a){a.parent=angular.element(a.parent);a.popInTarget=angular.element((a.targetEvent||{}).target);
var h=function(){var a=b[0].querySelector(".dialog-close");a||(a=b[0].querySelectorAll(".md-actions button"),a=a[a.length-1]);return angular.element(a)}();s(b.find("md-dialog"));a.hasBackdrop&&(a.backdrop=g('<md-backdrop class="md-opaque ng-enter">')(c),l.inherit(a.backdrop,a.parent),f.enter(a.backdrop,a.parent,null));return t(b,a.parent,a.popInTarget.length&&a.popInTarget).then(function(){a.escapeToClose&&(a.rootElementKeyupCallback=function(a){a.keyCode===k.KEY_CODE.ESCAPE&&d(p.cancel)},e.on("keyup",
a.rootElementKeyupCallback));a.clickOutsideToClose&&(a.dialogClickOutsideCallback=function(a){a.target===b[0]&&d(p.cancel)},b.on("click",a.dialogClickOutsideCallback));h.focus()})},onRemove:function(c,b,a){a.backdrop&&(f.leave(a.backdrop),b.data("backdrop",void 0));a.escapeToClose&&e.off("keyup",a.rootElementKeyupCallback);a.clickOutsideToClose&&b.off("click",a.dialogClickOutsideCallback);return f.leave(b).then(function(){b.remove();a.popInTarget&&a.popInTarget.focus()})},clickOutsideToClose:!0,escapeToClose:!0,
targetEvent:null,transformTemplate:function(c){return'<div class="md-dialog-container">'+c+"</div>"}}}var e=["title","content","ariaLabel","ok"];g.$inject=["$mdDialog"];h.$inject="$timeout $rootElement $compile $animate $mdAria $mdUtil $mdConstant $mdTheming $$rAF $q $mdDialog".split(" ");return f("$mdDialog").setDefaults({methods:["hasBackdrop","clickOutsideToClose","escapeToClose","targetEvent"],options:h}).addPreset("alert",{methods:e,options:g}).addPreset("confirm",{methods:e.concat("cancel"),
options:g})}angular.module("material.components.dialog",["material.core","material.components.backdrop"]).directive("mdDialog",m).provider("$mdDialog",l);m.$inject=["$$rAF","$mdTheming"];l.$inject=["$$interimElementProvider"]})();
