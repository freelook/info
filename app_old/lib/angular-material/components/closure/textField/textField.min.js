/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.5.1-master-4f755ea
 */
goog.provide('ng.material.components.textField');
goog.require('ng.material.core');
(function(){function f(d,b,e){return{restrict:"E",replace:!0,scope:{fid:"@?mdFid",label:"@?",value:"=ngModel"},compile:function(f,c){angular.isUndefined(c.mdFid)&&(c.mdFid=b.nextUid());return{pre:function(b,c,a){var d=e(a.ngDisabled);b.isDisabled=function(){return d(b.$parent)};b.inputType=a.type||"text"},post:d}},template:'<md-input-group tabindex="-1"> <label for="{{fid}}" >{{label}}</label> <md-input id="{{fid}}" ng-disabled="isDisabled()" ng-model="value" type="{{inputType}}"></md-input></md-input-group>'}}
function h(d){return{restrict:"E",replace:!0,template:"<input >",require:["^?mdInputGroup","?ngModel"],link:function(b,e,d,c){function f(a){a=angular.isUndefined(a)?e.val():a;return angular.isDefined(a)&&null!==a&&""!==a.toString().trim()}if(c[0]){var g=c[0];c=c[1];b.$watch(b.isDisabled,function(a){e.attr("aria-disabled",!!a);e.attr("tabindex",!!a)});e.attr("type",d.type||e.parent().attr("type")||"text");c&&c.$formatters.push(function(a){g.setHasValue(f(a));return a});e.on("input",function(){g.setHasValue(f())}).on("focus",
function(a){g.setFocused(!0)}).on("blur",function(a){g.setFocused(!1);g.setHasValue(f())});b.$on("$destroy",function(){g.setFocused(!1);g.setHasValue(!1)})}}}}angular.module("material.components.textField",["material.core"]).directive("mdInputGroup",function(){return{restrict:"CE",controller:["$element",function(d){this.setFocused=function(b){d.toggleClass("md-input-focused",!!b)};this.setHasValue=function(b){d.toggleClass("md-input-has-value",b)}}]}}).directive("mdInput",h).directive("mdTextFloat",
f);f.$inject=["$mdTheming","$mdUtil","$parse"];h.$inject=["$mdUtil"]})();
