##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration

# FLI CACHE
proxy_cache_path /var/www/cache levels=1:2 keys_zone=FLI:10m inactive=60m max_size=1g;

server {
	#listen 80 is default
	server_name *.freelook.info;
	return 301 $scheme://freelook.info$request_uri;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /freelook/info/app/dist;

	# Add index.php to the list if you are using PHP
	index index.html;

	server_name freelook.info;

	location / {
		# First attempt to serve request as file, then
		# enable html5 push state.
		try_files $uri @prerender;
		proxy_intercept_errors on;
	}

	location /prerender/ {
		# Send to server request for prerender
		proxy_pass http://localhost:3000/;
	}

	location /api/ {
		# Send to server request for api
		proxy_pass http://localhost:4000/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}

	location /api/proxy {
		if ($request_uri ~ ^/api/proxy/(.*)$) {
		set $target $1;
		}
		resolver 8.8.8.8;
		proxy_pass_request_headers off;
		proxy_set_header User-Agent 'Chrome/45';
		proxy_pass $target;
		proxy_intercept_errors on;
		error_page 301 302 = @redirect;
	}

	location @redirect {
		rewrite .* http://freelook.info/api/proxy/$upstream_http_location;
		proxy_pass http://freelook.info;
	}

	location /api/proxy/cache {
		if ($request_uri ~ ^/api/proxy/cache/(.*)$) {
		set $target $1;
		}
		resolver 8.8.8.8;
		proxy_pass_request_headers off;
		proxy_set_header User-Agent 'Chrome/45';
		proxy_ignore_headers Cache-Control Expires Set-Cookie;
		proxy_cache FLI;
		proxy_cache_valid 60m;
		proxy_pass $target;
	}

	location /page {
		resolver 8.8.8.8;
		proxy_pass http://goo.gl/$arg_id;
	}

	location @prerender {

		set $prerender 0;
		if ($http_user_agent ~* "Googlebot|bingbot|Googlebot-Mobile|Baiduspider|Yahoo|YahooSeeker|DoCoMo|Twitterbot|TweetmemeBot|Twikle|Netseer|Daumoa|SeznamBot|Ezooms|MSNBot|Exabot|MJ12bot|sogou\sspider|YandexBot|bitlybot|ia_archiver|proximic|spbot|ChangeDetection|NaverBot|MetaJobBot|magpie-crawler|Genieo\sWeb\sfilter|Qualidator.com\sBot|Woko|Vagabondo|360Spider|ExB\sLanguage\sCrawler|AddThis.com|aiHitBot|Spinn3r|BingPreview|GrapeshotCrawler|CareerBot|ZumBot|ShopWiki|bixocrawler|uMBot|sistrix|linkdexbot|AhrefsBot|archive.org_bot|SeoCheckBot|TurnitinBot|VoilaBot|SearchmetricsBot|Butterfly|Yahoo!|Plukkie|yacybot|trendictionbot|UASlinkChecker|Blekkobot|Wotbox|YioopBot|meanpathbot|TinEye|LuminateBot|FyberSpider|Infohelfer|linkdex.com|Curious\sGeorge|Fetch-Guess|ichiro|MojeekBot|SBSearch|WebThumbnail|socialbm_bot|SemrushBot|Vedma|alexa\ssite\saudit|SEOkicks-Robot|Browsershots|BLEXBot|woriobot|AMZNKAssocBot|Speedy|oBot|HostTracker|OpenWebSpider|WBSearchBot|FacebookExternalHit|Facebot|pinterest|vkshare") {
			set $prerender 1;
		}
		if ($args ~ "_escaped_fragment_|prerender=1") {
			set $prerender 1;
		}
		if ($http_user_agent ~ "Prerender") {
			set $prerender 0;
		}
		if ($prerender = 1) {
			rewrite .* $scheme://freelook.info$request_uri? break;
			proxy_pass http://prerender.freelook.info;
			error_page 500 501 502 503 504 = @reprerender;
		}
		if ($prerender = 0) {
			rewrite .* /index.html break;
		}

	}

	location @reprerender {
		rewrite .* $scheme://freelook.info$request_uri? break;
		proxy_pass http://localhost:3000;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}